"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/qr.js";
exports.ids = ["vendor-chunks/qr.js"];
exports.modules = {

/***/ "(ssr)/./node_modules/qr.js/lib/8BitByte.js":
/*!********************************************!*\
  !*** ./node_modules/qr.js/lib/8BitByte.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar mode = __webpack_require__(/*! ./mode */ \"(ssr)/./node_modules/qr.js/lib/mode.js\");\nfunction QR8bitByte(data) {\n    this.mode = mode.MODE_8BIT_BYTE;\n    this.data = data;\n}\nQR8bitByte.prototype = {\n    getLength: function(buffer) {\n        return this.data.length;\n    },\n    write: function(buffer) {\n        for(var i = 0; i < this.data.length; i++){\n            // not JIS ...\n            buffer.put(this.data.charCodeAt(i), 8);\n        }\n    }\n};\nmodule.exports = QR8bitByte;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcXIuanMvbGliLzhCaXRCeXRlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxPQUFPQyxtQkFBT0EsQ0FBQztBQUVuQixTQUFTQyxXQUFXQyxJQUFJO0lBQ3ZCLElBQUksQ0FBQ0gsSUFBSSxHQUFHQSxLQUFLSSxjQUFjO0lBQy9CLElBQUksQ0FBQ0QsSUFBSSxHQUFHQTtBQUNiO0FBRUFELFdBQVdHLFNBQVMsR0FBRztJQUV0QkMsV0FBWSxTQUFTQyxNQUFNO1FBQzFCLE9BQU8sSUFBSSxDQUFDSixJQUFJLENBQUNLLE1BQU07SUFDeEI7SUFFQUMsT0FBUSxTQUFTRixNQUFNO1FBQ3RCLElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ1AsSUFBSSxDQUFDSyxNQUFNLEVBQUVFLElBQUs7WUFDMUMsY0FBYztZQUNkSCxPQUFPSSxHQUFHLENBQUMsSUFBSSxDQUFDUixJQUFJLENBQUNTLFVBQVUsQ0FBQ0YsSUFBSTtRQUNyQztJQUNEO0FBQ0Q7QUFFQUcsT0FBT0MsT0FBTyxHQUFHWiIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZS8uL25vZGVfbW9kdWxlcy9xci5qcy9saWIvOEJpdEJ5dGUuanM/MDM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9kZSA9IHJlcXVpcmUoJy4vbW9kZScpO1xuXG5mdW5jdGlvbiBRUjhiaXRCeXRlKGRhdGEpIHtcblx0dGhpcy5tb2RlID0gbW9kZS5NT0RFXzhCSVRfQllURTtcblx0dGhpcy5kYXRhID0gZGF0YTtcbn1cblxuUVI4Yml0Qnl0ZS5wcm90b3R5cGUgPSB7XG5cblx0Z2V0TGVuZ3RoIDogZnVuY3Rpb24oYnVmZmVyKSB7XG5cdFx0cmV0dXJuIHRoaXMuZGF0YS5sZW5ndGg7XG5cdH0sXG5cdFxuXHR3cml0ZSA6IGZ1bmN0aW9uKGJ1ZmZlcikge1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5kYXRhLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHQvLyBub3QgSklTIC4uLlxuXHRcdFx0YnVmZmVyLnB1dCh0aGlzLmRhdGEuY2hhckNvZGVBdChpKSwgOCk7XG5cdFx0fVxuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFFSOGJpdEJ5dGU7XG5cbiJdLCJuYW1lcyI6WyJtb2RlIiwicmVxdWlyZSIsIlFSOGJpdEJ5dGUiLCJkYXRhIiwiTU9ERV84QklUX0JZVEUiLCJwcm90b3R5cGUiLCJnZXRMZW5ndGgiLCJidWZmZXIiLCJsZW5ndGgiLCJ3cml0ZSIsImkiLCJwdXQiLCJjaGFyQ29kZUF0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/qr.js/lib/8BitByte.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/qr.js/lib/BitBuffer.js":
/*!*********************************************!*\
  !*** ./node_modules/qr.js/lib/BitBuffer.js ***!
  \*********************************************/
/***/ ((module) => {

eval("\nfunction QRBitBuffer() {\n    this.buffer = new Array();\n    this.length = 0;\n}\nQRBitBuffer.prototype = {\n    get: function(index) {\n        var bufIndex = Math.floor(index / 8);\n        return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n    },\n    put: function(num, length) {\n        for(var i = 0; i < length; i++){\n            this.putBit((num >>> length - i - 1 & 1) == 1);\n        }\n    },\n    getLengthInBits: function() {\n        return this.length;\n    },\n    putBit: function(bit) {\n        var bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n        }\n        this.length++;\n    }\n};\nmodule.exports = QRBitBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcXIuanMvbGliL0JpdEJ1ZmZlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0E7SUFDUixJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJQztJQUNsQixJQUFJLENBQUNDLE1BQU0sR0FBRztBQUNmO0FBRUFILFlBQVlJLFNBQVMsR0FBRztJQUV2QkMsS0FBTSxTQUFTQyxLQUFLO1FBQ25CLElBQUlDLFdBQVdDLEtBQUtDLEtBQUssQ0FBQ0gsUUFBUTtRQUNsQyxPQUFPLENBQUUsSUFBSyxDQUFDTCxNQUFNLENBQUNNLFNBQVMsS0FBTSxJQUFJRCxRQUFRLElBQU8sTUFBTTtJQUMvRDtJQUVBSSxLQUFNLFNBQVNDLEdBQUcsRUFBRVIsTUFBTTtRQUN6QixJQUFLLElBQUlTLElBQUksR0FBR0EsSUFBSVQsUUFBUVMsSUFBSztZQUNoQyxJQUFJLENBQUNDLE1BQU0sQ0FBRSxDQUFFLFFBQVVWLFNBQVNTLElBQUksSUFBTyxNQUFNO1FBQ3BEO0lBQ0Q7SUFFQUUsaUJBQWtCO1FBQ2pCLE9BQU8sSUFBSSxDQUFDWCxNQUFNO0lBQ25CO0lBRUFVLFFBQVMsU0FBU0UsR0FBRztRQUVwQixJQUFJUixXQUFXQyxLQUFLQyxLQUFLLENBQUMsSUFBSSxDQUFDTixNQUFNLEdBQUc7UUFDeEMsSUFBSSxJQUFJLENBQUNGLE1BQU0sQ0FBQ0UsTUFBTSxJQUFJSSxVQUFVO1lBQ25DLElBQUksQ0FBQ04sTUFBTSxDQUFDZSxJQUFJLENBQUM7UUFDbEI7UUFFQSxJQUFJRCxLQUFLO1lBQ1IsSUFBSSxDQUFDZCxNQUFNLENBQUNNLFNBQVMsSUFBSyxTQUFVLElBQUksQ0FBQ0osTUFBTSxHQUFHO1FBQ25EO1FBRUEsSUFBSSxDQUFDQSxNQUFNO0lBQ1o7QUFDRDtBQUVBYyxPQUFPQyxPQUFPLEdBQUdsQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZS8uL25vZGVfbW9kdWxlcy9xci5qcy9saWIvQml0QnVmZmVyLmpzPzBlNzAiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gUVJCaXRCdWZmZXIoKSB7XG5cdHRoaXMuYnVmZmVyID0gbmV3IEFycmF5KCk7XG5cdHRoaXMubGVuZ3RoID0gMDtcbn1cblxuUVJCaXRCdWZmZXIucHJvdG90eXBlID0ge1xuXG5cdGdldCA6IGZ1bmN0aW9uKGluZGV4KSB7XG5cdFx0dmFyIGJ1ZkluZGV4ID0gTWF0aC5mbG9vcihpbmRleCAvIDgpO1xuXHRcdHJldHVybiAoICh0aGlzLmJ1ZmZlcltidWZJbmRleF0gPj4+ICg3IC0gaW5kZXggJSA4KSApICYgMSkgPT0gMTtcblx0fSxcblx0XG5cdHB1dCA6IGZ1bmN0aW9uKG51bSwgbGVuZ3RoKSB7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuXHRcdFx0dGhpcy5wdXRCaXQoICggKG51bSA+Pj4gKGxlbmd0aCAtIGkgLSAxKSApICYgMSkgPT0gMSk7XG5cdFx0fVxuXHR9LFxuXHRcblx0Z2V0TGVuZ3RoSW5CaXRzIDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMubGVuZ3RoO1xuXHR9LFxuXHRcblx0cHV0Qml0IDogZnVuY3Rpb24oYml0KSB7XG5cdFxuXHRcdHZhciBidWZJbmRleCA9IE1hdGguZmxvb3IodGhpcy5sZW5ndGggLyA4KTtcblx0XHRpZiAodGhpcy5idWZmZXIubGVuZ3RoIDw9IGJ1ZkluZGV4KSB7XG5cdFx0XHR0aGlzLmJ1ZmZlci5wdXNoKDApO1xuXHRcdH1cblx0XG5cdFx0aWYgKGJpdCkge1xuXHRcdFx0dGhpcy5idWZmZXJbYnVmSW5kZXhdIHw9ICgweDgwID4+PiAodGhpcy5sZW5ndGggJSA4KSApO1xuXHRcdH1cblx0XG5cdFx0dGhpcy5sZW5ndGgrKztcblx0fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBRUkJpdEJ1ZmZlcjtcbiJdLCJuYW1lcyI6WyJRUkJpdEJ1ZmZlciIsImJ1ZmZlciIsIkFycmF5IiwibGVuZ3RoIiwicHJvdG90eXBlIiwiZ2V0IiwiaW5kZXgiLCJidWZJbmRleCIsIk1hdGgiLCJmbG9vciIsInB1dCIsIm51bSIsImkiLCJwdXRCaXQiLCJnZXRMZW5ndGhJbkJpdHMiLCJiaXQiLCJwdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/qr.js/lib/BitBuffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/qr.js/lib/ErrorCorrectLevel.js":
/*!*****************************************************!*\
  !*** ./node_modules/qr.js/lib/ErrorCorrectLevel.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\nmodule.exports = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcXIuanMvbGliL0Vycm9yQ29ycmVjdExldmVsLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsT0FBT0MsT0FBTyxHQUFHO0lBQ2hCQyxHQUFJO0lBQ0pDLEdBQUk7SUFDSkMsR0FBSTtJQUNKQyxHQUFJO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWUvLi9ub2RlX21vZHVsZXMvcXIuanMvbGliL0Vycm9yQ29ycmVjdExldmVsLmpzP2MwNTMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG5cdEwgOiAxLFxuXHRNIDogMCxcblx0USA6IDMsXG5cdEggOiAyXG59O1xuXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIkwiLCJNIiwiUSIsIkgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/qr.js/lib/ErrorCorrectLevel.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/qr.js/lib/Polynomial.js":
/*!**********************************************!*\
  !*** ./node_modules/qr.js/lib/Polynomial.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar math = __webpack_require__(/*! ./math */ \"(ssr)/./node_modules/qr.js/lib/math.js\");\nfunction QRPolynomial(num, shift) {\n    if (num.length == undefined) {\n        throw new Error(num.length + \"/\" + shift);\n    }\n    var offset = 0;\n    while(offset < num.length && num[offset] == 0){\n        offset++;\n    }\n    this.num = new Array(num.length - offset + shift);\n    for(var i = 0; i < num.length - offset; i++){\n        this.num[i] = num[i + offset];\n    }\n}\nQRPolynomial.prototype = {\n    get: function(index) {\n        return this.num[index];\n    },\n    getLength: function() {\n        return this.num.length;\n    },\n    multiply: function(e) {\n        var num = new Array(this.getLength() + e.getLength() - 1);\n        for(var i = 0; i < this.getLength(); i++){\n            for(var j = 0; j < e.getLength(); j++){\n                num[i + j] ^= math.gexp(math.glog(this.get(i)) + math.glog(e.get(j)));\n            }\n        }\n        return new QRPolynomial(num, 0);\n    },\n    mod: function(e) {\n        if (this.getLength() - e.getLength() < 0) {\n            return this;\n        }\n        var ratio = math.glog(this.get(0)) - math.glog(e.get(0));\n        var num = new Array(this.getLength());\n        for(var i = 0; i < this.getLength(); i++){\n            num[i] = this.get(i);\n        }\n        for(var i = 0; i < e.getLength(); i++){\n            num[i] ^= math.gexp(math.glog(e.get(i)) + ratio);\n        }\n        // recursive call\n        return new QRPolynomial(num, 0).mod(e);\n    }\n};\nmodule.exports = QRPolynomial;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcXIuanMvbGliL1BvbHlub21pYWwuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLE9BQU9DLG1CQUFPQSxDQUFDO0FBRW5CLFNBQVNDLGFBQWFDLEdBQUcsRUFBRUMsS0FBSztJQUUvQixJQUFJRCxJQUFJRSxNQUFNLElBQUlDLFdBQVc7UUFDNUIsTUFBTSxJQUFJQyxNQUFNSixJQUFJRSxNQUFNLEdBQUcsTUFBTUQ7SUFDcEM7SUFFQSxJQUFJSSxTQUFTO0lBRWIsTUFBT0EsU0FBU0wsSUFBSUUsTUFBTSxJQUFJRixHQUFHLENBQUNLLE9BQU8sSUFBSSxFQUFHO1FBQy9DQTtJQUNEO0lBRUEsSUFBSSxDQUFDTCxHQUFHLEdBQUcsSUFBSU0sTUFBTU4sSUFBSUUsTUFBTSxHQUFHRyxTQUFTSjtJQUMzQyxJQUFLLElBQUlNLElBQUksR0FBR0EsSUFBSVAsSUFBSUUsTUFBTSxHQUFHRyxRQUFRRSxJQUFLO1FBQzdDLElBQUksQ0FBQ1AsR0FBRyxDQUFDTyxFQUFFLEdBQUdQLEdBQUcsQ0FBQ08sSUFBSUYsT0FBTztJQUM5QjtBQUNEO0FBRUFOLGFBQWFTLFNBQVMsR0FBRztJQUV4QkMsS0FBTSxTQUFTQyxLQUFLO1FBQ25CLE9BQU8sSUFBSSxDQUFDVixHQUFHLENBQUNVLE1BQU07SUFDdkI7SUFFQUMsV0FBWTtRQUNYLE9BQU8sSUFBSSxDQUFDWCxHQUFHLENBQUNFLE1BQU07SUFDdkI7SUFFQVUsVUFBVyxTQUFTQyxDQUFDO1FBRXBCLElBQUliLE1BQU0sSUFBSU0sTUFBTSxJQUFJLENBQUNLLFNBQVMsS0FBS0UsRUFBRUYsU0FBUyxLQUFLO1FBRXZELElBQUssSUFBSUosSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ0ksU0FBUyxJQUFJSixJQUFLO1lBQzFDLElBQUssSUFBSU8sSUFBSSxHQUFHQSxJQUFJRCxFQUFFRixTQUFTLElBQUlHLElBQUs7Z0JBQ3ZDZCxHQUFHLENBQUNPLElBQUlPLEVBQUUsSUFBSWpCLEtBQUtrQixJQUFJLENBQUNsQixLQUFLbUIsSUFBSSxDQUFDLElBQUksQ0FBQ1AsR0FBRyxDQUFDRixNQUFPVixLQUFLbUIsSUFBSSxDQUFDSCxFQUFFSixHQUFHLENBQUNLO1lBQ25FO1FBQ0Q7UUFFQSxPQUFPLElBQUlmLGFBQWFDLEtBQUs7SUFDOUI7SUFFQWlCLEtBQU0sU0FBU0osQ0FBQztRQUVmLElBQUksSUFBSSxDQUFDRixTQUFTLEtBQUtFLEVBQUVGLFNBQVMsS0FBSyxHQUFHO1lBQ3pDLE9BQU8sSUFBSTtRQUNaO1FBRUEsSUFBSU8sUUFBUXJCLEtBQUttQixJQUFJLENBQUMsSUFBSSxDQUFDUCxHQUFHLENBQUMsTUFBT1osS0FBS21CLElBQUksQ0FBQ0gsRUFBRUosR0FBRyxDQUFDO1FBRXRELElBQUlULE1BQU0sSUFBSU0sTUFBTSxJQUFJLENBQUNLLFNBQVM7UUFFbEMsSUFBSyxJQUFJSixJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDSSxTQUFTLElBQUlKLElBQUs7WUFDMUNQLEdBQUcsQ0FBQ08sRUFBRSxHQUFHLElBQUksQ0FBQ0UsR0FBRyxDQUFDRjtRQUNuQjtRQUVBLElBQUssSUFBSUEsSUFBSSxHQUFHQSxJQUFJTSxFQUFFRixTQUFTLElBQUlKLElBQUs7WUFDdkNQLEdBQUcsQ0FBQ08sRUFBRSxJQUFJVixLQUFLa0IsSUFBSSxDQUFDbEIsS0FBS21CLElBQUksQ0FBQ0gsRUFBRUosR0FBRyxDQUFDRixNQUFPVztRQUM1QztRQUVBLGlCQUFpQjtRQUNqQixPQUFPLElBQUluQixhQUFhQyxLQUFLLEdBQUdpQixHQUFHLENBQUNKO0lBQ3JDO0FBQ0Q7QUFFQU0sT0FBT0MsT0FBTyxHQUFHckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWUvLi9ub2RlX21vZHVsZXMvcXIuanMvbGliL1BvbHlub21pYWwuanM/MDA4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWF0aCA9IHJlcXVpcmUoJy4vbWF0aCcpO1xuXG5mdW5jdGlvbiBRUlBvbHlub21pYWwobnVtLCBzaGlmdCkge1xuXG5cdGlmIChudW0ubGVuZ3RoID09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihudW0ubGVuZ3RoICsgXCIvXCIgKyBzaGlmdCk7XG5cdH1cblxuXHR2YXIgb2Zmc2V0ID0gMDtcblxuXHR3aGlsZSAob2Zmc2V0IDwgbnVtLmxlbmd0aCAmJiBudW1bb2Zmc2V0XSA9PSAwKSB7XG5cdFx0b2Zmc2V0Kys7XG5cdH1cblxuXHR0aGlzLm51bSA9IG5ldyBBcnJheShudW0ubGVuZ3RoIC0gb2Zmc2V0ICsgc2hpZnQpO1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IG51bS5sZW5ndGggLSBvZmZzZXQ7IGkrKykge1xuXHRcdHRoaXMubnVtW2ldID0gbnVtW2kgKyBvZmZzZXRdO1xuXHR9XG59XG5cblFSUG9seW5vbWlhbC5wcm90b3R5cGUgPSB7XG5cblx0Z2V0IDogZnVuY3Rpb24oaW5kZXgpIHtcblx0XHRyZXR1cm4gdGhpcy5udW1baW5kZXhdO1xuXHR9LFxuXHRcblx0Z2V0TGVuZ3RoIDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMubnVtLmxlbmd0aDtcblx0fSxcblx0XG5cdG11bHRpcGx5IDogZnVuY3Rpb24oZSkge1xuXHRcblx0XHR2YXIgbnVtID0gbmV3IEFycmF5KHRoaXMuZ2V0TGVuZ3RoKCkgKyBlLmdldExlbmd0aCgpIC0gMSk7XG5cdFxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5nZXRMZW5ndGgoKTsgaSsrKSB7XG5cdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGUuZ2V0TGVuZ3RoKCk7IGorKykge1xuXHRcdFx0XHRudW1baSArIGpdIF49IG1hdGguZ2V4cChtYXRoLmdsb2codGhpcy5nZXQoaSkgKSArIG1hdGguZ2xvZyhlLmdldChqKSApICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcblx0XHRyZXR1cm4gbmV3IFFSUG9seW5vbWlhbChudW0sIDApO1xuXHR9LFxuXHRcblx0bW9kIDogZnVuY3Rpb24oZSkge1xuXHRcblx0XHRpZiAodGhpcy5nZXRMZW5ndGgoKSAtIGUuZ2V0TGVuZ3RoKCkgPCAwKSB7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFxuXHRcdHZhciByYXRpbyA9IG1hdGguZ2xvZyh0aGlzLmdldCgwKSApIC0gbWF0aC5nbG9nKGUuZ2V0KDApICk7XG5cdFxuXHRcdHZhciBudW0gPSBuZXcgQXJyYXkodGhpcy5nZXRMZW5ndGgoKSApO1xuXHRcdFxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5nZXRMZW5ndGgoKTsgaSsrKSB7XG5cdFx0XHRudW1baV0gPSB0aGlzLmdldChpKTtcblx0XHR9XG5cdFx0XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBlLmdldExlbmd0aCgpOyBpKyspIHtcblx0XHRcdG51bVtpXSBePSBtYXRoLmdleHAobWF0aC5nbG9nKGUuZ2V0KGkpICkgKyByYXRpbyk7XG5cdFx0fVxuXHRcblx0XHQvLyByZWN1cnNpdmUgY2FsbFxuXHRcdHJldHVybiBuZXcgUVJQb2x5bm9taWFsKG51bSwgMCkubW9kKGUpO1xuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFFSUG9seW5vbWlhbDtcbiJdLCJuYW1lcyI6WyJtYXRoIiwicmVxdWlyZSIsIlFSUG9seW5vbWlhbCIsIm51bSIsInNoaWZ0IiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJvZmZzZXQiLCJBcnJheSIsImkiLCJwcm90b3R5cGUiLCJnZXQiLCJpbmRleCIsImdldExlbmd0aCIsIm11bHRpcGx5IiwiZSIsImoiLCJnZXhwIiwiZ2xvZyIsIm1vZCIsInJhdGlvIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/qr.js/lib/Polynomial.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/qr.js/lib/QRCode.js":
/*!******************************************!*\
  !*** ./node_modules/qr.js/lib/QRCode.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar BitByte = __webpack_require__(/*! ./8BitByte */ \"(ssr)/./node_modules/qr.js/lib/8BitByte.js\");\nvar RSBlock = __webpack_require__(/*! ./RSBlock */ \"(ssr)/./node_modules/qr.js/lib/RSBlock.js\");\nvar BitBuffer = __webpack_require__(/*! ./BitBuffer */ \"(ssr)/./node_modules/qr.js/lib/BitBuffer.js\");\nvar util = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/qr.js/lib/util.js\");\nvar Polynomial = __webpack_require__(/*! ./Polynomial */ \"(ssr)/./node_modules/qr.js/lib/Polynomial.js\");\nfunction QRCode(typeNumber, errorCorrectLevel) {\n    this.typeNumber = typeNumber;\n    this.errorCorrectLevel = errorCorrectLevel;\n    this.modules = null;\n    this.moduleCount = 0;\n    this.dataCache = null;\n    this.dataList = [];\n}\n// for client side minification\nvar proto = QRCode.prototype;\nproto.addData = function(data) {\n    var newData = new BitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = null;\n};\nproto.isDark = function(row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n        throw new Error(row + \",\" + col);\n    }\n    return this.modules[row][col];\n};\nproto.getModuleCount = function() {\n    return this.moduleCount;\n};\nproto.make = function() {\n    // Calculate automatically typeNumber if provided is < 1\n    if (this.typeNumber < 1) {\n        var typeNumber = 1;\n        for(typeNumber = 1; typeNumber < 40; typeNumber++){\n            var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n            var buffer = new BitBuffer();\n            var totalDataCount = 0;\n            for(var i = 0; i < rsBlocks.length; i++){\n                totalDataCount += rsBlocks[i].dataCount;\n            }\n            for(var i = 0; i < this.dataList.length; i++){\n                var data = this.dataList[i];\n                buffer.put(data.mode, 4);\n                buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n                data.write(buffer);\n            }\n            if (buffer.getLengthInBits() <= totalDataCount * 8) break;\n        }\n        this.typeNumber = typeNumber;\n    }\n    this.makeImpl(false, this.getBestMaskPattern());\n};\nproto.makeImpl = function(test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n    for(var row = 0; row < this.moduleCount; row++){\n        this.modules[row] = new Array(this.moduleCount);\n        for(var col = 0; col < this.moduleCount; col++){\n            this.modules[row][col] = null; //(col + row) % 3;\n        }\n    }\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n    if (this.typeNumber >= 7) {\n        this.setupTypeNumber(test);\n    }\n    if (this.dataCache == null) {\n        this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n    this.mapData(this.dataCache, maskPattern);\n};\nproto.setupPositionProbePattern = function(row, col) {\n    for(var r = -1; r <= 7; r++){\n        if (row + r <= -1 || this.moduleCount <= row + r) continue;\n        for(var c = -1; c <= 7; c++){\n            if (col + c <= -1 || this.moduleCount <= col + c) continue;\n            if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n                this.modules[row + r][col + c] = true;\n            } else {\n                this.modules[row + r][col + c] = false;\n            }\n        }\n    }\n};\nproto.getBestMaskPattern = function() {\n    var minLostPoint = 0;\n    var pattern = 0;\n    for(var i = 0; i < 8; i++){\n        this.makeImpl(true, i);\n        var lostPoint = util.getLostPoint(this);\n        if (i == 0 || minLostPoint > lostPoint) {\n            minLostPoint = lostPoint;\n            pattern = i;\n        }\n    }\n    return pattern;\n};\nproto.createMovieClip = function(target_mc, instance_name, depth) {\n    var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    var cs = 1;\n    this.make();\n    for(var row = 0; row < this.modules.length; row++){\n        var y = row * cs;\n        for(var col = 0; col < this.modules[row].length; col++){\n            var x = col * cs;\n            var dark = this.modules[row][col];\n            if (dark) {\n                qr_mc.beginFill(0, 100);\n                qr_mc.moveTo(x, y);\n                qr_mc.lineTo(x + cs, y);\n                qr_mc.lineTo(x + cs, y + cs);\n                qr_mc.lineTo(x, y + cs);\n                qr_mc.endFill();\n            }\n        }\n    }\n    return qr_mc;\n};\nproto.setupTimingPattern = function() {\n    for(var r = 8; r < this.moduleCount - 8; r++){\n        if (this.modules[r][6] != null) {\n            continue;\n        }\n        this.modules[r][6] = r % 2 == 0;\n    }\n    for(var c = 8; c < this.moduleCount - 8; c++){\n        if (this.modules[6][c] != null) {\n            continue;\n        }\n        this.modules[6][c] = c % 2 == 0;\n    }\n};\nproto.setupPositionAdjustPattern = function() {\n    var pos = util.getPatternPosition(this.typeNumber);\n    for(var i = 0; i < pos.length; i++){\n        for(var j = 0; j < pos.length; j++){\n            var row = pos[i];\n            var col = pos[j];\n            if (this.modules[row][col] != null) {\n                continue;\n            }\n            for(var r = -2; r <= 2; r++){\n                for(var c = -2; c <= 2; c++){\n                    if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n                        this.modules[row + r][col + c] = true;\n                    } else {\n                        this.modules[row + r][col + c] = false;\n                    }\n                }\n            }\n        }\n    }\n};\nproto.setupTypeNumber = function(test) {\n    var bits = util.getBCHTypeNumber(this.typeNumber);\n    for(var i = 0; i < 18; i++){\n        var mod = !test && (bits >> i & 1) == 1;\n        this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n    }\n    for(var i = 0; i < 18; i++){\n        var mod = !test && (bits >> i & 1) == 1;\n        this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n    }\n};\nproto.setupTypeInfo = function(test, maskPattern) {\n    var data = this.errorCorrectLevel << 3 | maskPattern;\n    var bits = util.getBCHTypeInfo(data);\n    // vertical\t\t\n    for(var i = 0; i < 15; i++){\n        var mod = !test && (bits >> i & 1) == 1;\n        if (i < 6) {\n            this.modules[i][8] = mod;\n        } else if (i < 8) {\n            this.modules[i + 1][8] = mod;\n        } else {\n            this.modules[this.moduleCount - 15 + i][8] = mod;\n        }\n    }\n    // horizontal\n    for(var i = 0; i < 15; i++){\n        var mod = !test && (bits >> i & 1) == 1;\n        if (i < 8) {\n            this.modules[8][this.moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n            this.modules[8][15 - i - 1 + 1] = mod;\n        } else {\n            this.modules[8][15 - i - 1] = mod;\n        }\n    }\n    // fixed module\n    this.modules[this.moduleCount - 8][8] = !test;\n};\nproto.mapData = function(data, maskPattern) {\n    var inc = -1;\n    var row = this.moduleCount - 1;\n    var bitIndex = 7;\n    var byteIndex = 0;\n    for(var col = this.moduleCount - 1; col > 0; col -= 2){\n        if (col == 6) col--;\n        while(true){\n            for(var c = 0; c < 2; c++){\n                if (this.modules[row][col - c] == null) {\n                    var dark = false;\n                    if (byteIndex < data.length) {\n                        dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n                    }\n                    var mask = util.getMask(maskPattern, row, col - c);\n                    if (mask) {\n                        dark = !dark;\n                    }\n                    this.modules[row][col - c] = dark;\n                    bitIndex--;\n                    if (bitIndex == -1) {\n                        byteIndex++;\n                        bitIndex = 7;\n                    }\n                }\n            }\n            row += inc;\n            if (row < 0 || this.moduleCount <= row) {\n                row -= inc;\n                inc = -inc;\n                break;\n            }\n        }\n    }\n};\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n    var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n    var buffer = new BitBuffer();\n    for(var i = 0; i < dataList.length; i++){\n        var data = dataList[i];\n        buffer.put(data.mode, 4);\n        buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n        data.write(buffer);\n    }\n    // calc num max data.\n    var totalDataCount = 0;\n    for(var i = 0; i < rsBlocks.length; i++){\n        totalDataCount += rsBlocks[i].dataCount;\n    }\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n    }\n    // end code\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n    }\n    // padding\n    while(buffer.getLengthInBits() % 8 != 0){\n        buffer.putBit(false);\n    }\n    // padding\n    while(true){\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n        }\n        buffer.put(QRCode.PAD0, 8);\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n        }\n        buffer.put(QRCode.PAD1, 8);\n    }\n    return QRCode.createBytes(buffer, rsBlocks);\n};\nQRCode.createBytes = function(buffer, rsBlocks) {\n    var offset = 0;\n    var maxDcCount = 0;\n    var maxEcCount = 0;\n    var dcdata = new Array(rsBlocks.length);\n    var ecdata = new Array(rsBlocks.length);\n    for(var r = 0; r < rsBlocks.length; r++){\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n        dcdata[r] = new Array(dcCount);\n        for(var i = 0; i < dcdata[r].length; i++){\n            dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n        }\n        offset += dcCount;\n        var rsPoly = util.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for(var i = 0; i < ecdata[r].length; i++){\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n            ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n        }\n    }\n    var totalCodeCount = 0;\n    for(var i = 0; i < rsBlocks.length; i++){\n        totalCodeCount += rsBlocks[i].totalCount;\n    }\n    var data = new Array(totalCodeCount);\n    var index = 0;\n    for(var i = 0; i < maxDcCount; i++){\n        for(var r = 0; r < rsBlocks.length; r++){\n            if (i < dcdata[r].length) {\n                data[index++] = dcdata[r][i];\n            }\n        }\n    }\n    for(var i = 0; i < maxEcCount; i++){\n        for(var r = 0; r < rsBlocks.length; r++){\n            if (i < ecdata[r].length) {\n                data[index++] = ecdata[r][i];\n            }\n        }\n    }\n    return data;\n};\nmodule.exports = QRCode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/qr.js/lib/QRCode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/qr.js/lib/RSBlock.js":
/*!*******************************************!*\
  !*** ./node_modules/qr.js/lib/RSBlock.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// ErrorCorrectLevel\n\nvar ECL = __webpack_require__(/*! ./ErrorCorrectLevel */ \"(ssr)/./node_modules/qr.js/lib/ErrorCorrectLevel.js\");\nfunction QRRSBlock(totalCount, dataCount) {\n    this.totalCount = totalCount;\n    this.dataCount = dataCount;\n}\nQRRSBlock.RS_BLOCK_TABLE = [\n    // L\n    // M\n    // Q\n    // H\n    // 1\n    [\n        1,\n        26,\n        19\n    ],\n    [\n        1,\n        26,\n        16\n    ],\n    [\n        1,\n        26,\n        13\n    ],\n    [\n        1,\n        26,\n        9\n    ],\n    // 2\n    [\n        1,\n        44,\n        34\n    ],\n    [\n        1,\n        44,\n        28\n    ],\n    [\n        1,\n        44,\n        22\n    ],\n    [\n        1,\n        44,\n        16\n    ],\n    // 3\n    [\n        1,\n        70,\n        55\n    ],\n    [\n        1,\n        70,\n        44\n    ],\n    [\n        2,\n        35,\n        17\n    ],\n    [\n        2,\n        35,\n        13\n    ],\n    // 4\t\t\n    [\n        1,\n        100,\n        80\n    ],\n    [\n        2,\n        50,\n        32\n    ],\n    [\n        2,\n        50,\n        24\n    ],\n    [\n        4,\n        25,\n        9\n    ],\n    // 5\n    [\n        1,\n        134,\n        108\n    ],\n    [\n        2,\n        67,\n        43\n    ],\n    [\n        2,\n        33,\n        15,\n        2,\n        34,\n        16\n    ],\n    [\n        2,\n        33,\n        11,\n        2,\n        34,\n        12\n    ],\n    // 6\n    [\n        2,\n        86,\n        68\n    ],\n    [\n        4,\n        43,\n        27\n    ],\n    [\n        4,\n        43,\n        19\n    ],\n    [\n        4,\n        43,\n        15\n    ],\n    // 7\t\t\n    [\n        2,\n        98,\n        78\n    ],\n    [\n        4,\n        49,\n        31\n    ],\n    [\n        2,\n        32,\n        14,\n        4,\n        33,\n        15\n    ],\n    [\n        4,\n        39,\n        13,\n        1,\n        40,\n        14\n    ],\n    // 8\n    [\n        2,\n        121,\n        97\n    ],\n    [\n        2,\n        60,\n        38,\n        2,\n        61,\n        39\n    ],\n    [\n        4,\n        40,\n        18,\n        2,\n        41,\n        19\n    ],\n    [\n        4,\n        40,\n        14,\n        2,\n        41,\n        15\n    ],\n    // 9\n    [\n        2,\n        146,\n        116\n    ],\n    [\n        3,\n        58,\n        36,\n        2,\n        59,\n        37\n    ],\n    [\n        4,\n        36,\n        16,\n        4,\n        37,\n        17\n    ],\n    [\n        4,\n        36,\n        12,\n        4,\n        37,\n        13\n    ],\n    // 10\t\t\n    [\n        2,\n        86,\n        68,\n        2,\n        87,\n        69\n    ],\n    [\n        4,\n        69,\n        43,\n        1,\n        70,\n        44\n    ],\n    [\n        6,\n        43,\n        19,\n        2,\n        44,\n        20\n    ],\n    [\n        6,\n        43,\n        15,\n        2,\n        44,\n        16\n    ],\n    // 11\n    [\n        4,\n        101,\n        81\n    ],\n    [\n        1,\n        80,\n        50,\n        4,\n        81,\n        51\n    ],\n    [\n        4,\n        50,\n        22,\n        4,\n        51,\n        23\n    ],\n    [\n        3,\n        36,\n        12,\n        8,\n        37,\n        13\n    ],\n    // 12\n    [\n        2,\n        116,\n        92,\n        2,\n        117,\n        93\n    ],\n    [\n        6,\n        58,\n        36,\n        2,\n        59,\n        37\n    ],\n    [\n        4,\n        46,\n        20,\n        6,\n        47,\n        21\n    ],\n    [\n        7,\n        42,\n        14,\n        4,\n        43,\n        15\n    ],\n    // 13\n    [\n        4,\n        133,\n        107\n    ],\n    [\n        8,\n        59,\n        37,\n        1,\n        60,\n        38\n    ],\n    [\n        8,\n        44,\n        20,\n        4,\n        45,\n        21\n    ],\n    [\n        12,\n        33,\n        11,\n        4,\n        34,\n        12\n    ],\n    // 14\n    [\n        3,\n        145,\n        115,\n        1,\n        146,\n        116\n    ],\n    [\n        4,\n        64,\n        40,\n        5,\n        65,\n        41\n    ],\n    [\n        11,\n        36,\n        16,\n        5,\n        37,\n        17\n    ],\n    [\n        11,\n        36,\n        12,\n        5,\n        37,\n        13\n    ],\n    // 15\n    [\n        5,\n        109,\n        87,\n        1,\n        110,\n        88\n    ],\n    [\n        5,\n        65,\n        41,\n        5,\n        66,\n        42\n    ],\n    [\n        5,\n        54,\n        24,\n        7,\n        55,\n        25\n    ],\n    [\n        11,\n        36,\n        12\n    ],\n    // 16\n    [\n        5,\n        122,\n        98,\n        1,\n        123,\n        99\n    ],\n    [\n        7,\n        73,\n        45,\n        3,\n        74,\n        46\n    ],\n    [\n        15,\n        43,\n        19,\n        2,\n        44,\n        20\n    ],\n    [\n        3,\n        45,\n        15,\n        13,\n        46,\n        16\n    ],\n    // 17\n    [\n        1,\n        135,\n        107,\n        5,\n        136,\n        108\n    ],\n    [\n        10,\n        74,\n        46,\n        1,\n        75,\n        47\n    ],\n    [\n        1,\n        50,\n        22,\n        15,\n        51,\n        23\n    ],\n    [\n        2,\n        42,\n        14,\n        17,\n        43,\n        15\n    ],\n    // 18\n    [\n        5,\n        150,\n        120,\n        1,\n        151,\n        121\n    ],\n    [\n        9,\n        69,\n        43,\n        4,\n        70,\n        44\n    ],\n    [\n        17,\n        50,\n        22,\n        1,\n        51,\n        23\n    ],\n    [\n        2,\n        42,\n        14,\n        19,\n        43,\n        15\n    ],\n    // 19\n    [\n        3,\n        141,\n        113,\n        4,\n        142,\n        114\n    ],\n    [\n        3,\n        70,\n        44,\n        11,\n        71,\n        45\n    ],\n    [\n        17,\n        47,\n        21,\n        4,\n        48,\n        22\n    ],\n    [\n        9,\n        39,\n        13,\n        16,\n        40,\n        14\n    ],\n    // 20\n    [\n        3,\n        135,\n        107,\n        5,\n        136,\n        108\n    ],\n    [\n        3,\n        67,\n        41,\n        13,\n        68,\n        42\n    ],\n    [\n        15,\n        54,\n        24,\n        5,\n        55,\n        25\n    ],\n    [\n        15,\n        43,\n        15,\n        10,\n        44,\n        16\n    ],\n    // 21\n    [\n        4,\n        144,\n        116,\n        4,\n        145,\n        117\n    ],\n    [\n        17,\n        68,\n        42\n    ],\n    [\n        17,\n        50,\n        22,\n        6,\n        51,\n        23\n    ],\n    [\n        19,\n        46,\n        16,\n        6,\n        47,\n        17\n    ],\n    // 22\n    [\n        2,\n        139,\n        111,\n        7,\n        140,\n        112\n    ],\n    [\n        17,\n        74,\n        46\n    ],\n    [\n        7,\n        54,\n        24,\n        16,\n        55,\n        25\n    ],\n    [\n        34,\n        37,\n        13\n    ],\n    // 23\n    [\n        4,\n        151,\n        121,\n        5,\n        152,\n        122\n    ],\n    [\n        4,\n        75,\n        47,\n        14,\n        76,\n        48\n    ],\n    [\n        11,\n        54,\n        24,\n        14,\n        55,\n        25\n    ],\n    [\n        16,\n        45,\n        15,\n        14,\n        46,\n        16\n    ],\n    // 24\n    [\n        6,\n        147,\n        117,\n        4,\n        148,\n        118\n    ],\n    [\n        6,\n        73,\n        45,\n        14,\n        74,\n        46\n    ],\n    [\n        11,\n        54,\n        24,\n        16,\n        55,\n        25\n    ],\n    [\n        30,\n        46,\n        16,\n        2,\n        47,\n        17\n    ],\n    // 25\n    [\n        8,\n        132,\n        106,\n        4,\n        133,\n        107\n    ],\n    [\n        8,\n        75,\n        47,\n        13,\n        76,\n        48\n    ],\n    [\n        7,\n        54,\n        24,\n        22,\n        55,\n        25\n    ],\n    [\n        22,\n        45,\n        15,\n        13,\n        46,\n        16\n    ],\n    // 26\n    [\n        10,\n        142,\n        114,\n        2,\n        143,\n        115\n    ],\n    [\n        19,\n        74,\n        46,\n        4,\n        75,\n        47\n    ],\n    [\n        28,\n        50,\n        22,\n        6,\n        51,\n        23\n    ],\n    [\n        33,\n        46,\n        16,\n        4,\n        47,\n        17\n    ],\n    // 27\n    [\n        8,\n        152,\n        122,\n        4,\n        153,\n        123\n    ],\n    [\n        22,\n        73,\n        45,\n        3,\n        74,\n        46\n    ],\n    [\n        8,\n        53,\n        23,\n        26,\n        54,\n        24\n    ],\n    [\n        12,\n        45,\n        15,\n        28,\n        46,\n        16\n    ],\n    // 28\n    [\n        3,\n        147,\n        117,\n        10,\n        148,\n        118\n    ],\n    [\n        3,\n        73,\n        45,\n        23,\n        74,\n        46\n    ],\n    [\n        4,\n        54,\n        24,\n        31,\n        55,\n        25\n    ],\n    [\n        11,\n        45,\n        15,\n        31,\n        46,\n        16\n    ],\n    // 29\n    [\n        7,\n        146,\n        116,\n        7,\n        147,\n        117\n    ],\n    [\n        21,\n        73,\n        45,\n        7,\n        74,\n        46\n    ],\n    [\n        1,\n        53,\n        23,\n        37,\n        54,\n        24\n    ],\n    [\n        19,\n        45,\n        15,\n        26,\n        46,\n        16\n    ],\n    // 30\n    [\n        5,\n        145,\n        115,\n        10,\n        146,\n        116\n    ],\n    [\n        19,\n        75,\n        47,\n        10,\n        76,\n        48\n    ],\n    [\n        15,\n        54,\n        24,\n        25,\n        55,\n        25\n    ],\n    [\n        23,\n        45,\n        15,\n        25,\n        46,\n        16\n    ],\n    // 31\n    [\n        13,\n        145,\n        115,\n        3,\n        146,\n        116\n    ],\n    [\n        2,\n        74,\n        46,\n        29,\n        75,\n        47\n    ],\n    [\n        42,\n        54,\n        24,\n        1,\n        55,\n        25\n    ],\n    [\n        23,\n        45,\n        15,\n        28,\n        46,\n        16\n    ],\n    // 32\n    [\n        17,\n        145,\n        115\n    ],\n    [\n        10,\n        74,\n        46,\n        23,\n        75,\n        47\n    ],\n    [\n        10,\n        54,\n        24,\n        35,\n        55,\n        25\n    ],\n    [\n        19,\n        45,\n        15,\n        35,\n        46,\n        16\n    ],\n    // 33\n    [\n        17,\n        145,\n        115,\n        1,\n        146,\n        116\n    ],\n    [\n        14,\n        74,\n        46,\n        21,\n        75,\n        47\n    ],\n    [\n        29,\n        54,\n        24,\n        19,\n        55,\n        25\n    ],\n    [\n        11,\n        45,\n        15,\n        46,\n        46,\n        16\n    ],\n    // 34\n    [\n        13,\n        145,\n        115,\n        6,\n        146,\n        116\n    ],\n    [\n        14,\n        74,\n        46,\n        23,\n        75,\n        47\n    ],\n    [\n        44,\n        54,\n        24,\n        7,\n        55,\n        25\n    ],\n    [\n        59,\n        46,\n        16,\n        1,\n        47,\n        17\n    ],\n    // 35\n    [\n        12,\n        151,\n        121,\n        7,\n        152,\n        122\n    ],\n    [\n        12,\n        75,\n        47,\n        26,\n        76,\n        48\n    ],\n    [\n        39,\n        54,\n        24,\n        14,\n        55,\n        25\n    ],\n    [\n        22,\n        45,\n        15,\n        41,\n        46,\n        16\n    ],\n    // 36\n    [\n        6,\n        151,\n        121,\n        14,\n        152,\n        122\n    ],\n    [\n        6,\n        75,\n        47,\n        34,\n        76,\n        48\n    ],\n    [\n        46,\n        54,\n        24,\n        10,\n        55,\n        25\n    ],\n    [\n        2,\n        45,\n        15,\n        64,\n        46,\n        16\n    ],\n    // 37\n    [\n        17,\n        152,\n        122,\n        4,\n        153,\n        123\n    ],\n    [\n        29,\n        74,\n        46,\n        14,\n        75,\n        47\n    ],\n    [\n        49,\n        54,\n        24,\n        10,\n        55,\n        25\n    ],\n    [\n        24,\n        45,\n        15,\n        46,\n        46,\n        16\n    ],\n    // 38\n    [\n        4,\n        152,\n        122,\n        18,\n        153,\n        123\n    ],\n    [\n        13,\n        74,\n        46,\n        32,\n        75,\n        47\n    ],\n    [\n        48,\n        54,\n        24,\n        14,\n        55,\n        25\n    ],\n    [\n        42,\n        45,\n        15,\n        32,\n        46,\n        16\n    ],\n    // 39\n    [\n        20,\n        147,\n        117,\n        4,\n        148,\n        118\n    ],\n    [\n        40,\n        75,\n        47,\n        7,\n        76,\n        48\n    ],\n    [\n        43,\n        54,\n        24,\n        22,\n        55,\n        25\n    ],\n    [\n        10,\n        45,\n        15,\n        67,\n        46,\n        16\n    ],\n    // 40\n    [\n        19,\n        148,\n        118,\n        6,\n        149,\n        119\n    ],\n    [\n        18,\n        75,\n        47,\n        31,\n        76,\n        48\n    ],\n    [\n        34,\n        54,\n        24,\n        34,\n        55,\n        25\n    ],\n    [\n        20,\n        45,\n        15,\n        61,\n        46,\n        16\n    ]\n];\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n    var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n    if (rsBlock == undefined) {\n        throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n    }\n    var length = rsBlock.length / 3;\n    var list = new Array();\n    for(var i = 0; i < length; i++){\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n        for(var j = 0; j < count; j++){\n            list.push(new QRRSBlock(totalCount, dataCount));\n        }\n    }\n    return list;\n};\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n    switch(errorCorrectLevel){\n        case ECL.L:\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n        case ECL.M:\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n        case ECL.Q:\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n        case ECL.H:\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\nmodule.exports = QRRSBlock;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/qr.js/lib/RSBlock.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/qr.js/lib/math.js":
/*!****************************************!*\
  !*** ./node_modules/qr.js/lib/math.js ***!
  \****************************************/
/***/ ((module) => {

eval("\nvar QRMath = {\n    glog: function(n) {\n        if (n < 1) {\n            throw new Error(\"glog(\" + n + \")\");\n        }\n        return QRMath.LOG_TABLE[n];\n    },\n    gexp: function(n) {\n        while(n < 0){\n            n += 255;\n        }\n        while(n >= 256){\n            n -= 255;\n        }\n        return QRMath.EXP_TABLE[n];\n    },\n    EXP_TABLE: new Array(256),\n    LOG_TABLE: new Array(256)\n};\nfor(var i = 0; i < 8; i++){\n    QRMath.EXP_TABLE[i] = 1 << i;\n}\nfor(var i = 8; i < 256; i++){\n    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n}\nfor(var i = 0; i < 255; i++){\n    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\nmodule.exports = QRMath;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcXIuanMvbGliL21hdGguanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFNBQVM7SUFFWkMsTUFBTyxTQUFTQyxDQUFDO1FBRWhCLElBQUlBLElBQUksR0FBRztZQUNWLE1BQU0sSUFBSUMsTUFBTSxVQUFVRCxJQUFJO1FBQy9CO1FBRUEsT0FBT0YsT0FBT0ksU0FBUyxDQUFDRixFQUFFO0lBQzNCO0lBRUFHLE1BQU8sU0FBU0gsQ0FBQztRQUVoQixNQUFPQSxJQUFJLEVBQUc7WUFDYkEsS0FBSztRQUNOO1FBRUEsTUFBT0EsS0FBSyxJQUFLO1lBQ2hCQSxLQUFLO1FBQ047UUFFQSxPQUFPRixPQUFPTSxTQUFTLENBQUNKLEVBQUU7SUFDM0I7SUFFQUksV0FBWSxJQUFJQyxNQUFNO0lBRXRCSCxXQUFZLElBQUlHLE1BQU07QUFFdkI7QUFFQSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSSxHQUFHQSxJQUFLO0lBQzNCUixPQUFPTSxTQUFTLENBQUNFLEVBQUUsR0FBRyxLQUFLQTtBQUM1QjtBQUNBLElBQUssSUFBSUEsSUFBSSxHQUFHQSxJQUFJLEtBQUtBLElBQUs7SUFDN0JSLE9BQU9NLFNBQVMsQ0FBQ0UsRUFBRSxHQUFHUixPQUFPTSxTQUFTLENBQUNFLElBQUksRUFBRSxHQUMxQ1IsT0FBT00sU0FBUyxDQUFDRSxJQUFJLEVBQUUsR0FDdkJSLE9BQU9NLFNBQVMsQ0FBQ0UsSUFBSSxFQUFFLEdBQ3ZCUixPQUFPTSxTQUFTLENBQUNFLElBQUksRUFBRTtBQUMzQjtBQUNBLElBQUssSUFBSUEsSUFBSSxHQUFHQSxJQUFJLEtBQUtBLElBQUs7SUFDN0JSLE9BQU9JLFNBQVMsQ0FBQ0osT0FBT00sU0FBUyxDQUFDRSxFQUFFLENBQUUsR0FBR0E7QUFDMUM7QUFFQUMsT0FBT0MsT0FBTyxHQUFHViIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3VtZS8uL25vZGVfbW9kdWxlcy9xci5qcy9saWIvbWF0aC5qcz81MThhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBRUk1hdGggPSB7XG5cblx0Z2xvZyA6IGZ1bmN0aW9uKG4pIHtcblx0XG5cdFx0aWYgKG4gPCAxKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJnbG9nKFwiICsgbiArIFwiKVwiKTtcblx0XHR9XG5cdFx0XG5cdFx0cmV0dXJuIFFSTWF0aC5MT0dfVEFCTEVbbl07XG5cdH0sXG5cdFxuXHRnZXhwIDogZnVuY3Rpb24obikge1xuXHRcblx0XHR3aGlsZSAobiA8IDApIHtcblx0XHRcdG4gKz0gMjU1O1xuXHRcdH1cblx0XG5cdFx0d2hpbGUgKG4gPj0gMjU2KSB7XG5cdFx0XHRuIC09IDI1NTtcblx0XHR9XG5cdFxuXHRcdHJldHVybiBRUk1hdGguRVhQX1RBQkxFW25dO1xuXHR9LFxuXHRcblx0RVhQX1RBQkxFIDogbmV3IEFycmF5KDI1NiksXG5cdFxuXHRMT0dfVEFCTEUgOiBuZXcgQXJyYXkoMjU2KVxuXG59O1xuXHRcbmZvciAodmFyIGkgPSAwOyBpIDwgODsgaSsrKSB7XG5cdFFSTWF0aC5FWFBfVEFCTEVbaV0gPSAxIDw8IGk7XG59XG5mb3IgKHZhciBpID0gODsgaSA8IDI1NjsgaSsrKSB7XG5cdFFSTWF0aC5FWFBfVEFCTEVbaV0gPSBRUk1hdGguRVhQX1RBQkxFW2kgLSA0XVxuXHRcdF4gUVJNYXRoLkVYUF9UQUJMRVtpIC0gNV1cblx0XHReIFFSTWF0aC5FWFBfVEFCTEVbaSAtIDZdXG5cdFx0XiBRUk1hdGguRVhQX1RBQkxFW2kgLSA4XTtcbn1cbmZvciAodmFyIGkgPSAwOyBpIDwgMjU1OyBpKyspIHtcblx0UVJNYXRoLkxPR19UQUJMRVtRUk1hdGguRVhQX1RBQkxFW2ldIF0gPSBpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFFSTWF0aDtcbiJdLCJuYW1lcyI6WyJRUk1hdGgiLCJnbG9nIiwibiIsIkVycm9yIiwiTE9HX1RBQkxFIiwiZ2V4cCIsIkVYUF9UQUJMRSIsIkFycmF5IiwiaSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/qr.js/lib/math.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/qr.js/lib/mode.js":
/*!****************************************!*\
  !*** ./node_modules/qr.js/lib/mode.js ***!
  \****************************************/
/***/ ((module) => {

eval("\nmodule.exports = {\n    MODE_NUMBER: 1 << 0,\n    MODE_ALPHA_NUM: 1 << 1,\n    MODE_8BIT_BYTE: 1 << 2,\n    MODE_KANJI: 1 << 3\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcXIuanMvbGliL21vZGUuanMiLCJtYXBwaW5ncyI6IjtBQUFBQSxPQUFPQyxPQUFPLEdBQUc7SUFDaEJDLGFBQWUsS0FBSztJQUNwQkMsZ0JBQWtCLEtBQUs7SUFDdkJDLGdCQUFrQixLQUFLO0lBQ3ZCQyxZQUFjLEtBQUs7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN1bWUvLi9ub2RlX21vZHVsZXMvcXIuanMvbGliL21vZGUuanM/NzVhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcblx0TU9ERV9OVU1CRVIgOlx0XHQxIDw8IDAsXG5cdE1PREVfQUxQSEFfTlVNIDogXHQxIDw8IDEsXG5cdE1PREVfOEJJVF9CWVRFIDogXHQxIDw8IDIsXG5cdE1PREVfS0FOSkkgOlx0XHQxIDw8IDNcbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIk1PREVfTlVNQkVSIiwiTU9ERV9BTFBIQV9OVU0iLCJNT0RFXzhCSVRfQllURSIsIk1PREVfS0FOSkkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/qr.js/lib/mode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/qr.js/lib/util.js":
/*!****************************************!*\
  !*** ./node_modules/qr.js/lib/util.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Mode = __webpack_require__(/*! ./mode */ \"(ssr)/./node_modules/qr.js/lib/mode.js\");\nvar Polynomial = __webpack_require__(/*! ./Polynomial */ \"(ssr)/./node_modules/qr.js/lib/Polynomial.js\");\nvar math = __webpack_require__(/*! ./math */ \"(ssr)/./node_modules/qr.js/lib/math.js\");\nvar QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n};\nvar QRUtil = {\n    PATTERN_POSITION_TABLE: [\n        [],\n        [\n            6,\n            18\n        ],\n        [\n            6,\n            22\n        ],\n        [\n            6,\n            26\n        ],\n        [\n            6,\n            30\n        ],\n        [\n            6,\n            34\n        ],\n        [\n            6,\n            22,\n            38\n        ],\n        [\n            6,\n            24,\n            42\n        ],\n        [\n            6,\n            26,\n            46\n        ],\n        [\n            6,\n            28,\n            50\n        ],\n        [\n            6,\n            30,\n            54\n        ],\n        [\n            6,\n            32,\n            58\n        ],\n        [\n            6,\n            34,\n            62\n        ],\n        [\n            6,\n            26,\n            46,\n            66\n        ],\n        [\n            6,\n            26,\n            48,\n            70\n        ],\n        [\n            6,\n            26,\n            50,\n            74\n        ],\n        [\n            6,\n            30,\n            54,\n            78\n        ],\n        [\n            6,\n            30,\n            56,\n            82\n        ],\n        [\n            6,\n            30,\n            58,\n            86\n        ],\n        [\n            6,\n            34,\n            62,\n            90\n        ],\n        [\n            6,\n            28,\n            50,\n            72,\n            94\n        ],\n        [\n            6,\n            26,\n            50,\n            74,\n            98\n        ],\n        [\n            6,\n            30,\n            54,\n            78,\n            102\n        ],\n        [\n            6,\n            28,\n            54,\n            80,\n            106\n        ],\n        [\n            6,\n            32,\n            58,\n            84,\n            110\n        ],\n        [\n            6,\n            30,\n            58,\n            86,\n            114\n        ],\n        [\n            6,\n            34,\n            62,\n            90,\n            118\n        ],\n        [\n            6,\n            26,\n            50,\n            74,\n            98,\n            122\n        ],\n        [\n            6,\n            30,\n            54,\n            78,\n            102,\n            126\n        ],\n        [\n            6,\n            26,\n            52,\n            78,\n            104,\n            130\n        ],\n        [\n            6,\n            30,\n            56,\n            82,\n            108,\n            134\n        ],\n        [\n            6,\n            34,\n            60,\n            86,\n            112,\n            138\n        ],\n        [\n            6,\n            30,\n            58,\n            86,\n            114,\n            142\n        ],\n        [\n            6,\n            34,\n            62,\n            90,\n            118,\n            146\n        ],\n        [\n            6,\n            30,\n            54,\n            78,\n            102,\n            126,\n            150\n        ],\n        [\n            6,\n            24,\n            50,\n            76,\n            102,\n            128,\n            154\n        ],\n        [\n            6,\n            28,\n            54,\n            80,\n            106,\n            132,\n            158\n        ],\n        [\n            6,\n            32,\n            58,\n            84,\n            110,\n            136,\n            162\n        ],\n        [\n            6,\n            26,\n            54,\n            82,\n            110,\n            138,\n            166\n        ],\n        [\n            6,\n            30,\n            58,\n            86,\n            114,\n            142,\n            170\n        ]\n    ],\n    G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n    G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n    G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n    getBCHTypeInfo: function(data) {\n        var d = data << 10;\n        while(QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0){\n            d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n        }\n        return (data << 10 | d) ^ QRUtil.G15_MASK;\n    },\n    getBCHTypeNumber: function(data) {\n        var d = data << 12;\n        while(QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0){\n            d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n        }\n        return data << 12 | d;\n    },\n    getBCHDigit: function(data) {\n        var digit = 0;\n        while(data != 0){\n            digit++;\n            data >>>= 1;\n        }\n        return digit;\n    },\n    getPatternPosition: function(typeNumber) {\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n    getMask: function(maskPattern, i, j) {\n        switch(maskPattern){\n            case QRMaskPattern.PATTERN000:\n                return (i + j) % 2 == 0;\n            case QRMaskPattern.PATTERN001:\n                return i % 2 == 0;\n            case QRMaskPattern.PATTERN010:\n                return j % 3 == 0;\n            case QRMaskPattern.PATTERN011:\n                return (i + j) % 3 == 0;\n            case QRMaskPattern.PATTERN100:\n                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n            case QRMaskPattern.PATTERN101:\n                return i * j % 2 + i * j % 3 == 0;\n            case QRMaskPattern.PATTERN110:\n                return (i * j % 2 + i * j % 3) % 2 == 0;\n            case QRMaskPattern.PATTERN111:\n                return (i * j % 3 + (i + j) % 2) % 2 == 0;\n            default:\n                throw new Error(\"bad maskPattern:\" + maskPattern);\n        }\n    },\n    getErrorCorrectPolynomial: function(errorCorrectLength) {\n        var a = new Polynomial([\n            1\n        ], 0);\n        for(var i = 0; i < errorCorrectLength; i++){\n            a = a.multiply(new Polynomial([\n                1,\n                math.gexp(i)\n            ], 0));\n        }\n        return a;\n    },\n    getLengthInBits: function(mode, type) {\n        if (1 <= type && type < 10) {\n            // 1 - 9\n            switch(mode){\n                case Mode.MODE_NUMBER:\n                    return 10;\n                case Mode.MODE_ALPHA_NUM:\n                    return 9;\n                case Mode.MODE_8BIT_BYTE:\n                    return 8;\n                case Mode.MODE_KANJI:\n                    return 8;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        } else if (type < 27) {\n            // 10 - 26\n            switch(mode){\n                case Mode.MODE_NUMBER:\n                    return 12;\n                case Mode.MODE_ALPHA_NUM:\n                    return 11;\n                case Mode.MODE_8BIT_BYTE:\n                    return 16;\n                case Mode.MODE_KANJI:\n                    return 10;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        } else if (type < 41) {\n            // 27 - 40\n            switch(mode){\n                case Mode.MODE_NUMBER:\n                    return 14;\n                case Mode.MODE_ALPHA_NUM:\n                    return 13;\n                case Mode.MODE_8BIT_BYTE:\n                    return 16;\n                case Mode.MODE_KANJI:\n                    return 12;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        } else {\n            throw new Error(\"type:\" + type);\n        }\n    },\n    getLostPoint: function(qrCode) {\n        var moduleCount = qrCode.getModuleCount();\n        var lostPoint = 0;\n        // LEVEL1\n        for(var row = 0; row < moduleCount; row++){\n            for(var col = 0; col < moduleCount; col++){\n                var sameCount = 0;\n                var dark = qrCode.isDark(row, col);\n                for(var r = -1; r <= 1; r++){\n                    if (row + r < 0 || moduleCount <= row + r) {\n                        continue;\n                    }\n                    for(var c = -1; c <= 1; c++){\n                        if (col + c < 0 || moduleCount <= col + c) {\n                            continue;\n                        }\n                        if (r == 0 && c == 0) {\n                            continue;\n                        }\n                        if (dark == qrCode.isDark(row + r, col + c)) {\n                            sameCount++;\n                        }\n                    }\n                }\n                if (sameCount > 5) {\n                    lostPoint += 3 + sameCount - 5;\n                }\n            }\n        }\n        // LEVEL2\n        for(var row = 0; row < moduleCount - 1; row++){\n            for(var col = 0; col < moduleCount - 1; col++){\n                var count = 0;\n                if (qrCode.isDark(row, col)) count++;\n                if (qrCode.isDark(row + 1, col)) count++;\n                if (qrCode.isDark(row, col + 1)) count++;\n                if (qrCode.isDark(row + 1, col + 1)) count++;\n                if (count == 0 || count == 4) {\n                    lostPoint += 3;\n                }\n            }\n        }\n        // LEVEL3\n        for(var row = 0; row < moduleCount; row++){\n            for(var col = 0; col < moduleCount - 6; col++){\n                if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        for(var col = 0; col < moduleCount; col++){\n            for(var row = 0; row < moduleCount - 6; row++){\n                if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        // LEVEL4\n        var darkCount = 0;\n        for(var col = 0; col < moduleCount; col++){\n            for(var row = 0; row < moduleCount; row++){\n                if (qrCode.isDark(row, col)) {\n                    darkCount++;\n                }\n            }\n        }\n        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n        return lostPoint;\n    }\n};\nmodule.exports = QRUtil;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/qr.js/lib/util.js\n");

/***/ })

};
;